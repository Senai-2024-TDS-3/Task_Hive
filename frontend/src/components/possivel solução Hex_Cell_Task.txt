import { useEffect, useState } from "react";

export default function Hex_Cell_Task() {
    const [tasks, setTasks] = useState([]);

    useEffect(() => {
        const fetchtask = async () => {
            try {
                const response = await fetch('http://localhost:3001/visualizar_all_tasks');
                const data = await response.json();
                console.log(data);
                setTasks(data);
            } catch (error) {
                console.error("Erro ao buscar tarefas:", error);
            }
        };

        fetchtask(); // Chama a função para buscar as tarefas
    }, []); // Roda apenas uma vez ao carregar o componente

    const ArrayDataItems = ({ items }) => {
        return (
            <div className="Hex_Layout_Tasks">
                {items.map((tarefa, index) => {
                    // Alterna entre 'layout_left' e 'layout_right' com base no índice
                    const classe = Math.floor(index / 7) % 2 === 0 ? "layout_left" : "layout_right";
                    
                    return (
                        <div className={`Hex_Layout_Tasks ${classe}`} key={index}>
                            <div className="hex_wrapper">
                                <div className="hex_task">
                                    <div className="lista_task">
                                        {/* Exibe os dados da tarefa */}
                                        <span className="span_titulo">{tarefa.titulo}</span>
                                        <br />
                                        <span className="span_prazo">{tarefa.prazo}</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    );
                })}
            </div>
        );
    };

    return (
        <div>
            <ArrayDataItems items={tasks} />
        </div>
    );
}


O problema principal está na forma como você está manipulando o estado dentro do mapeamento 
do componente ArrayDataItems. Chamar setIdx e alterValue diretamente durante a renderização 
causa um loop infinito, porque isso altera o estado, acionando um novo ciclo de 
renderização.
